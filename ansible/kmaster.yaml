---
- name: Configure Kubernetes Masters
  hosts: km*
  connection: local
  become: true
  roles:
    - role: configure-swap
      become: true
    - role: install-tools
      become: true

  tasks:
    # https://kubernetes.io/docs/reference/networking/ports-and-protocols/
    - name: Open required firewall ports
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: tcp
        direction: in
      loop:
        - { port: 22 }
        - { port: 443 }
        - { port: 6443 }
        - { port: 10250 }
        - { port: 10257 }
        - { port: 10259 }
        - { port: 2379:2380 }
        - { port: 60000:61000 }

    - name: Include containerd setup tasks
      ansible.builtin.include_role:
        name: install-containerd

    # Initialize K8s cluster, run only on primary master
    - name: Initialize K8s cluster with kubeadm
      when: ansible_hostname == primary_master_hostname
      block:
        - name: Initialize K8s cluster with kubeadm
          ansible.builtin.command: kubeadm init --control-plane-endpoint="{{ vip }}:6443" --upload-certs --apiserver-advertise-address={{ ansible_default_ipv4.address }} --pod-network-cidr=192.168.0.0/16
          register: kubeadm_init_cmd

        - name: Write join command to local file
          ansible.builtin.copy:
            content: "{{ kubeadm_init_cmd.stdout }}"
            dest: /home/vagrant/join-command

        # https://docs.tigera.io/calico/latest/getting-started/kubernetes/self-managed-onprem/onpremises
        # Uses the operator method - as it manages calico lifecycle
        - name: Install CNI - calico
          ansible.builtin.shell:
            cmd: |
              kubectl create -f "https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/tigera-operator.yaml"
              kubectl create -f "https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/custom-resources.yaml"
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Install ingress controller
          ansible.builtin.include_role:
            name: install-ingress
            apply:
              environment:
                KUBECONFIG: /etc/kubernetes/admin.conf

    # Fetch join command from primary master, ugly but works..
    - name: Join non-primary master to cluster
      when: not ansible_hostname == primary_master_hostname
      block:
        - name: Fetch join command from primary master
          ansible.builtin.shell:
            cmd: >-
              /usr/bin/sshpass -p "vagrant"
              scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
              vagrant@172.16.0.101:/home/vagrant/join-command /home/vagrant/join-command
              && chown vagrant:vagrant /home/vagrant/join-command
          register: copy_join_cmd
          until: copy_join_cmd is not failed
          retries: 10
          delay: 10

        - name: Join node to cluster
          ansible.builtin.shell:
            cmd: |
              # Extract only control-plane join command - rudimentary but works
              set -o pipefail
              grep -A3 "kubeadm join" /home/vagrant/join-command | head -3 | tee /home/vagrant/join-command
              chmod +x /home/vagrant/join-command && bash /home/vagrant/join-command
          args:
            executable: /usr/bin/bash

    - name: Create .kube directory for vagrant user
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0700'

    - name: Copy kubeconfig for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: true
        owner: vagrant
        group: vagrant
        mode: '0600'

    - name: Make life easier with tools
      ansible.builtin.blockinfile:
        path: /home/vagrant/.bashrc
        block: |
          alias k="kubectl"
          alias kn="kubectl config set-context --current --namespace"
          source <(kubectl completion bash)
          source <(helm completion bash)
          complete -o default -F __start_kubectl k
        state: present
        insertafter: EOF
