---
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
- name: Containerd module prerequisites
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - { src: "modules_k8s.conf.j2", dest: "/etc/modules-load.d/k8s.conf" }
    - { src: "sysctl_k8s.conf.j2", dest: "/etc/sysctl.d/k8s.conf" }

- name: Apply sysctl parameters
  ansible.builtin.shell:
    cmd: |
      modprobe overlay
      modprobe br_netfilter
      sysctl --system

- name: Add K8 repository
  ansible.builtin.deb822_repository:
    name: kubernetes
    types: deb
    uris: https://pkgs.k8s.io/core:/stable:/v1.29/deb/
    suites: /
    architectures: amd64
    signed_by: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key

# https://github.com/containerd/containerd/blob/main/docs/getting-started.md
- name: Install recent version of containerd
  block:
    # Download containerd
    - name: Download containerd
      ansible.builtin.unarchive:
        src: "{{ containerd_url }}"
        dest: /usr/local
        remote_src: true

    - name: Download containerd service unit
      ansible.builtin.get_url:
        url: "{{ containerd_service_url }}"
        dest: /lib/systemd/system/containerd.service
        mode: '0644'

    # Download runc
    - name: Download runc
      ansible.builtin.get_url:
        url: "{{ runc_url }}"
        dest: /usr/local/sbin/runc
        mode: '0755'

    # Download CNI plugins
    - name: Create CNI directory
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: Download CNI plugins
      ansible.builtin.unarchive:
        src: "{{ cni_plugins_url }}"
        dest: /opt/cni/bin
        remote_src: true

- name: Install K8s binaries
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - "kubeadm={{ kubernetes_version }}"
      - "kubelet={{ kubernetes_version }}"
      - "kubectl={{ kubernetes_version }}"
    state: present
    update_cache: true
    autoclean: true

- name: Generate default containerd config
  ansible.builtin.shell:
    cmd: |
      mkdir -p /etc/containerd
      containerd config default > /etc/containerd/config.toml

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#cgroup-drivers
- name: Ensure containerd is using systemd cgroup driver
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: '(\s+)SystemdCgroup = false$'
    replace: '\1SystemdCgroup = true'

- name: Start K8s services
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - containerd
    - kubelet
